name: Docker Build via  Terraform

on:
  push:
    branches:
      - master

env:
  REGISTRY_URL: docker.io
  IMAGE_NAME: my-gh-ubuntu

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU (for cross-arch builds, optional)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

    # dont build from docker file. just setup environment with above steps
    #   - name: Build and push Docker image
    #     id: build
    #     uses: docker/build-push-action@v4
    #     with:
    #       context: .
    #       push: true
    #       tags: |
    #         ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest
    #         ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}


  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production
    defaults:
      run:
        shell: bash
        working-directory: container-pipeline-1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
